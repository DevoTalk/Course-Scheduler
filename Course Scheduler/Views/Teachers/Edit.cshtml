@using Course_Scheduler.Models.Enum
@model Course_Scheduler.Models.ViewModels.UpdateTeacherViewModel
@{
    ViewData["Title"] = "Edit Teacher";
}

<h1>Edit Teacher</h1>

<hr />

<div>

    <form asp-action="Edit" method="post" id="Form">
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        
        <input type="hidden" asp-for="ID" />
        @for (int i = 0; i < Enum.GetValues(typeof(ClassTimes)).Length; i++)
        {
            var time = (ClassTimes)Enum.GetValues(typeof(ClassTimes)).GetValue(i);
            if(Model.PreferredTime.Select(p=>p.PreferredTime).Contains(time))
            {
                <input type="hidden" name="PreferredTime[@i].PreferredTime" value=@time.ToString() id="PreferredTime(@i)" class="PreferredTimeInput">
                <input type="hidden" name="PreferredTime[@i].Penalty" value=@Model.PreferredTime.First(p=>p.PreferredTime==time).Penalty.ToString() id="HiddenPreferredTimePenalty(@i)" class="PenaltyInput">
            }
        }


    </form>


    <div class="form-group">
        <label class="control-label">Preferred Time with Penalties:</label>
        <br />
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Has Preference</th>
                    <th>Penalty</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Enum.GetValues(typeof(ClassTimes)).Length; i++)
                {
                    var time = (ClassTimes)Enum.GetValues(typeof(ClassTimes)).GetValue(i);
                    var isInList = Model.PreferredTime.Select(p => p.PreferredTime).Contains(time);
                    <tr>
                        <td>@time</td>
                        <td>
                            <input type="checkbox" onchange="CheckedChenge(@i)" id="PreferredTimeCheckbox(@i)" class="PreferredTime" @(isInList ? "checked" : "") />

                            <input type="hidden" id="PreferredTimeValue(@i)" value="@time">
                        </td>
                        <td>
                            @if (isInList)
                            {
                                <input type="number" class="penaltyInput" name=PreferredTime[@i].Penalty min="0" id="PreferredTimePenalty(@i)" value=@Model.PreferredTime.First(p=>p.PreferredTime==time).Penalty.ToString() index="@i">

                            }else{
                                <input type="number" class="penaltyInput" name=PreferredTime[@i].Penalty min="0" id="PreferredTimePenalty(@i)" index="@i" disabled>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="form-group">
        <input type="button" value="Edit" onclick="submitClicked()" class="btn btn-primary" />
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    <script>
        function CheckedChenge(index) {
            var checkbox = document.getElementById('PreferredTimeCheckbox(' + index + ')');
            var timeValueInput = document.getElementById('PreferredTimeValue(' + index + ')');
            var penaltyInput = document.getElementById('PreferredTimePenalty(' + index + ')');
            var form = document.getElementById('Form');


            if (checkbox.checked) {

                penaltyInput.disabled = false;


                var hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = penaltyInput.name; // Assign the same name
                hiddenInput.value = penaltyInput.value; // Assign the same value
                hiddenInput.id = 'HiddenPreferredTimePenalty(' + index + ')';
                hiddenInput.className = 'PenaltyInput';

                var timeInput = document.createElement('input');
                timeInput.type = 'hidden';
                timeInput.name = 'PreferredTime[' + index + '].PreferredTime';
                timeInput.value = timeValueInput.value;
                timeInput.id = 'PreferredTime(' + index + ')';
                timeInput.className = 'PreferredTimeInput';
                form.appendChild(timeInput);
                form.appendChild(hiddenInput);
            } else {
                var timeInput = document.getElementById('PreferredTime(' + index + ')');
                form.removeChild(timeInput);
                var hiddenInputForRemove = document.getElementById('HiddenPreferredTimePenalty(' + index + ')');
                form.removeChild(hiddenInputForRemove);
                penaltyInput.value = "";
                penaltyInput.disabled = true;

            }
            updateIndexAndSortInputs();
        }
        function updateIndexAndSortInputs() {
            // Get all the hidden input elements
            var preferredTimeInputs = document.querySelectorAll('input[class="PreferredTimeInput"]');
            var PenaltyInputs = document.querySelectorAll('input[class="PenaltyInput"]');
            for (var i = 0; i < preferredTimeInputs.length; i++) {
                preferredTimeInputs[i].name = 'PreferredTime[' + i + '].PreferredTime';
            }
            for (var i = 0; i < PenaltyInputs.length; i++) {
                PenaltyInputs[i].name = 'PreferredTime[' + i + '].Penalty';
            }
        }

        function submitClicked() {
            var form = document.getElementById('Form');
            form.submit();
        }
        $(".penaltyInput").on("change", function () {
            var index = this.getAttribute("index");
            var penaltyInput = document.getElementById('PreferredTimePenalty(' + index + ')');
            var hiddenInput = document.getElementById('HiddenPreferredTimePenalty(' + index + ')');
            hiddenInput.value = penaltyInput.value;
        });
    </script>
}
