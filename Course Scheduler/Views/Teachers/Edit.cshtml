@using Course_Scheduler.Models.Enum
@model Course_Scheduler.Models.Teacher
@{
    ViewData["Title"] = "Create Teacher";
}

<h1>Create Teacher</h1>

<hr />

<form asp-action="Edit">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PreferredTime" class="control-label">Preferred Time:</label>
        <br />
        @foreach (var time in Enum.GetValues(typeof(ClassTime)))
        {
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="@($"chk{time}")" name="PreferredTime" value="@time.ToString()" @(Model.PreferredTime.Contains((ClassTime)time) ? "checked" : "")>
                <label class="form-check-label" for="@($"chk{time}")">@time</label>
            </div>
        }
        <span asp-validation-for="PreferredTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
