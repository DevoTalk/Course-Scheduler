@model IEnumerable<Course_Scheduler.Models.ViewModels.CourseAndTeachersViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
    <button class="btn-success">
        <a asp-controller="Penalty" asp-action="GeneratePenalty" class="link-light">Generate Penalty</a>
    </button>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Course.Name)
            </th>
           
            <th>
                Teachers
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Course.Name)
                </td>
                
                <td>
                    @string.Join(",", @item.Teachers.Select(t => t.Name))
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Course.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Course.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Course.ID">Delete</a>|

                    @if (item.IsFix)
                    {
                        <label class="text-danger">fix</label>
                        <a asp-action="UnFixCourse" asp-route-id="@item.Course.ID">Unfix</a>
                    }
                    else
                    {
                        <a asp-action="FixCourseTime" asp-route-id="@item.Course.ID">FixCourseTime</a>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
